0. Проверяем готовность системы
    sudo apt update && sudo apt upgrade -y
    sudo apt remove containerd containerd.io docker docker.io -y
    sudo apt-get install apt-transport-https ca-certificates curl software-properties-common -y
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    sudo apt update
    sudo apt install docker-ce -y
    sudo usermod -aG docker $USER
    sudo apt install sshpass -y
    sudo apt install openssh-server -y
    sudo apt-get install python3 python3-pip python3-dev python3-setuptools -y
1. Создаём Dockerfile с установкой всех необходимых пакетов и доступом по ssh
2. Создаём образ
    docker build -t my_docs .
3. Запускаем контейнеры с пробросом портов
    docker run -d -p 2221:22 --name doc1 my_docs
    docker run -d -p 2222:22 --name doc2 my_docs
4. Устанавливаем ansible на машину
    sudo apt update
    sudo apt install -y ansible
5. Создаём структуру каталогов ansible
    mkdir -p ansible_project/{inventory,playbooks,roles}
    cd ansible_project
6. Создаём ansible.cfg в yaml (ansible_project/ansible.cfg)
7. Формируем inventory и параметры подключения к системам (ansi.../inventory/hosts.yml)
8. Проверяем подключение (варианты)
    ssh -p 2221 root@localhost
    ssh -p 2222 root@localhost
    ansible -m ping all
    ansible -m ping doc1
    ansible -m ping doc2
9. Пример выполнения команды shell
    ansible -m shell -a 'date' doc1 -i inventory/hosts.yml
    ansible -m shell -a 'df -h' doc1 -i inventory/hosts.yml
10. Подготавливаем всё для playbook
    mkdir -p ansible_project/playbooks/templates
    >ansible_project/playbooks/templates/sys.j2
11. Пишем jinja2-файл sys.j2 по скрипту из первой лабы
12. Создаём и пишем sys.yml, который будет запускать sys.j2  на докерах и переносить
    результаты на машину
    >ansible_project/playbooks/sys.yml
13. Запускаем наш playbook и проверяем директорию jsons/
    ansible-playbook -i inventory/hosts.yml playbooks/sys.yml
14. Создаём роль
    cd ansible_project/
    ansible-galaxy role init docker_compose_role
15. Пишем docker_compose_role/tasks/main.yml
16. Пишем docker_compose_role/files/docker_compose.yml
17. Переносим Dockerfile в docker_compose_role/files/
18. Добавляем playbooks/docs.yml для запуска роли
19. Устанавливаем docker-compose
    sudo apt update
    sudo apt install docker-compose
    ansible-galaxy collection install community.docker
20. Тормозим и удаляем докеры, пробуем роль
    docker stop doc1 doc2
    docker rm doc1 doc2
    ansible-playbook -i inventory/hosts.yml playbooks/docs.yml